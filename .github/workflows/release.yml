name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_PAT }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_PAT }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      - name: Get the latest tag
        id: get_tag
        run: |
          # Fetch all tags from the repository
          git fetch --tags
          # Get the most recent tag
          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "::set-output name=latest_tag::$LATEST_TAG"

      - name: Set version in package.json to latest tag
        run: |
          echo "Updating version in package.json to $LATEST_TAG"
          # Use jq to replace the version in package.json
          jq --arg tag "$LATEST_TAG" '.version = $tag' package.json > temp.json && mv temp.json package.json

      - name: Commit updated package.json
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add package.json
          git commit -m "chore: set version to $LATEST_TAG"
          git push
